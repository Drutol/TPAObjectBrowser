// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using ObjectBrowser.DataAccess;
using ObjectBrowser.Models.Enums;
using System;

namespace ObjectBrowser.DataAccess.Migrations
{
    [DbContext(typeof(AssemblyDatabaseContext))]
    partial class AssemblyDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("ObjectBrowser.Models.Entities.AssemblyMetadata", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("RestrictToNamespace");

                    b.HasKey("Id");

                    b.ToTable("Assemblies");
                });

            modelBuilder.Entity("ObjectBrowser.Models.Entities.EnumFieldMetadata", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<long?>("ParentTypeId");

                    b.Property<int>("Value");

                    b.HasKey("Id");

                    b.HasIndex("ParentTypeId");

                    b.ToTable("EnumFieldMetadatas");
                });

            modelBuilder.Entity("ObjectBrowser.Models.Entities.FieldMetadata", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<long?>("ParentTypeId");

                    b.Property<long?>("TypeMetadataId");

                    b.HasKey("Id");

                    b.HasIndex("ParentTypeId");

                    b.HasIndex("TypeMetadataId");

                    b.ToTable("FieldMetadatas");
                });

            modelBuilder.Entity("ObjectBrowser.Models.Entities.MethodMetadata", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Extension");

                    b.Property<long?>("ModifiersId");

                    b.Property<string>("Name");

                    b.Property<long?>("ParentTypeAId");

                    b.Property<long?>("ParentTypeBId");

                    b.Property<long?>("ParentTypeCId");

                    b.Property<long?>("ReturnTypeId");

                    b.Property<long?>("RootAssemblyId");

                    b.HasKey("Id");

                    b.HasIndex("ModifiersId")
                        .IsUnique();

                    b.HasIndex("ParentTypeAId");

                    b.HasIndex("ParentTypeBId");

                    b.HasIndex("ParentTypeCId");

                    b.HasIndex("ReturnTypeId");

                    b.HasIndex("RootAssemblyId");

                    b.ToTable("MethodMetadatas");
                });

            modelBuilder.Entity("ObjectBrowser.Models.Entities.MethodModifiers", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessLevel");

                    b.Property<bool>("IsAbstract");

                    b.Property<bool>("IsStatic");

                    b.Property<bool>("IsVirtual");

                    b.HasKey("Id");

                    b.ToTable("MethodModifiers");
                });

            modelBuilder.Entity("ObjectBrowser.Models.Entities.NamespaceMetadata", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NamespaceName");

                    b.Property<long?>("RootAssemblyId");

                    b.HasKey("Id");

                    b.HasIndex("RootAssemblyId");

                    b.ToTable("NamespaceMetadatas");
                });

            modelBuilder.Entity("ObjectBrowser.Models.Entities.ParameterMetadata", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("MethodMetadataId");

                    b.Property<string>("Name");

                    b.Property<long?>("TypeMetadataId");

                    b.HasKey("Id");

                    b.HasIndex("MethodMetadataId");

                    b.HasIndex("TypeMetadataId");

                    b.ToTable("ParameterMetadatas");
                });

            modelBuilder.Entity("ObjectBrowser.Models.Entities.PropertyMetadata", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<long?>("ParentTypeId");

                    b.Property<long?>("RootAssemblyId");

                    b.Property<long?>("TypeMetadataId");

                    b.HasKey("Id");

                    b.HasIndex("ParentTypeId");

                    b.HasIndex("RootAssemblyId");

                    b.HasIndex("TypeMetadataId");

                    b.ToTable("PropertyMetadatas");
                });

            modelBuilder.Entity("ObjectBrowser.Models.Entities.TypeMetadata", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("BaseTypeId");

                    b.Property<long?>("DeclaringTypeId");

                    b.Property<bool>("EndOfTree");

                    b.Property<long?>("ModifiersId");

                    b.Property<long?>("NamespaceId");

                    b.Property<string>("NamespaceName");

                    b.Property<long?>("ParentMethodId");

                    b.Property<long?>("ParentTypeAId");

                    b.Property<long?>("ParentTypeBId");

                    b.Property<long?>("ParentTypeCId");

                    b.Property<long?>("ParentTypeEId");

                    b.Property<long?>("RootAssemblyId");

                    b.Property<int>("TypeHash");

                    b.Property<int>("TypeKind");

                    b.Property<string>("TypeName");

                    b.Property<bool>("TypeReference");

                    b.HasKey("Id");

                    b.HasIndex("BaseTypeId")
                        .IsUnique();

                    b.HasIndex("DeclaringTypeId")
                        .IsUnique();

                    b.HasIndex("ModifiersId")
                        .IsUnique();

                    b.HasIndex("NamespaceId");

                    b.HasIndex("ParentMethodId");

                    b.HasIndex("ParentTypeAId");

                    b.HasIndex("ParentTypeBId");

                    b.HasIndex("ParentTypeCId");

                    b.HasIndex("ParentTypeEId");

                    b.HasIndex("RootAssemblyId");

                    b.ToTable("TypeMetadatas");
                });

            modelBuilder.Entity("ObjectBrowser.Models.Entities.TypeModifiers", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessLevel");

                    b.Property<bool>("IsAbstract");

                    b.Property<bool>("IsSealed");

                    b.HasKey("Id");

                    b.ToTable("TypeModifiers");
                });

            modelBuilder.Entity("ObjectBrowser.Models.Entities.EnumFieldMetadata", b =>
                {
                    b.HasOne("ObjectBrowser.Models.Entities.TypeMetadata", "ParentType")
                        .WithMany("EnumFields")
                        .HasForeignKey("ParentTypeId");
                });

            modelBuilder.Entity("ObjectBrowser.Models.Entities.FieldMetadata", b =>
                {
                    b.HasOne("ObjectBrowser.Models.Entities.TypeMetadata", "ParentType")
                        .WithMany("Fields")
                        .HasForeignKey("ParentTypeId");

                    b.HasOne("ObjectBrowser.Models.Entities.TypeMetadata", "TypeMetadata")
                        .WithMany()
                        .HasForeignKey("TypeMetadataId");
                });

            modelBuilder.Entity("ObjectBrowser.Models.Entities.MethodMetadata", b =>
                {
                    b.HasOne("ObjectBrowser.Models.Entities.MethodModifiers", "Modifiers")
                        .WithOne("ParentMethod")
                        .HasForeignKey("ObjectBrowser.Models.Entities.MethodMetadata", "ModifiersId");

                    b.HasOne("ObjectBrowser.Models.Entities.TypeMetadata", "ParentTypeA")
                        .WithMany("Methods")
                        .HasForeignKey("ParentTypeAId");

                    b.HasOne("ObjectBrowser.Models.Entities.TypeMetadata", "ParentTypeB")
                        .WithMany("Constructors")
                        .HasForeignKey("ParentTypeBId");

                    b.HasOne("ObjectBrowser.Models.Entities.TypeMetadata", "ParentTypeC")
                        .WithMany()
                        .HasForeignKey("ParentTypeCId");

                    b.HasOne("ObjectBrowser.Models.Entities.TypeMetadata", "ReturnType")
                        .WithMany()
                        .HasForeignKey("ReturnTypeId");

                    b.HasOne("ObjectBrowser.Models.Entities.AssemblyMetadata", "RootAssembly")
                        .WithMany()
                        .HasForeignKey("RootAssemblyId");
                });

            modelBuilder.Entity("ObjectBrowser.Models.Entities.NamespaceMetadata", b =>
                {
                    b.HasOne("ObjectBrowser.Models.Entities.AssemblyMetadata", "RootAssembly")
                        .WithMany("Namespaces")
                        .HasForeignKey("RootAssemblyId");
                });

            modelBuilder.Entity("ObjectBrowser.Models.Entities.ParameterMetadata", b =>
                {
                    b.HasOne("ObjectBrowser.Models.Entities.MethodMetadata", "MethodMetadata")
                        .WithMany("Parameters")
                        .HasForeignKey("MethodMetadataId");

                    b.HasOne("ObjectBrowser.Models.Entities.TypeMetadata", "TypeMetadata")
                        .WithMany()
                        .HasForeignKey("TypeMetadataId");
                });

            modelBuilder.Entity("ObjectBrowser.Models.Entities.PropertyMetadata", b =>
                {
                    b.HasOne("ObjectBrowser.Models.Entities.TypeMetadata", "ParentType")
                        .WithMany("Properties")
                        .HasForeignKey("ParentTypeId");

                    b.HasOne("ObjectBrowser.Models.Entities.AssemblyMetadata", "RootAssembly")
                        .WithMany()
                        .HasForeignKey("RootAssemblyId");

                    b.HasOne("ObjectBrowser.Models.Entities.TypeMetadata", "TypeMetadata")
                        .WithMany()
                        .HasForeignKey("TypeMetadataId");
                });

            modelBuilder.Entity("ObjectBrowser.Models.Entities.TypeMetadata", b =>
                {
                    b.HasOne("ObjectBrowser.Models.Entities.TypeMetadata", "BaseType")
                        .WithOne("ParentTypeF")
                        .HasForeignKey("ObjectBrowser.Models.Entities.TypeMetadata", "BaseTypeId");

                    b.HasOne("ObjectBrowser.Models.Entities.TypeMetadata", "DeclaringType")
                        .WithOne("ParentTypeD")
                        .HasForeignKey("ObjectBrowser.Models.Entities.TypeMetadata", "DeclaringTypeId");

                    b.HasOne("ObjectBrowser.Models.Entities.TypeModifiers", "Modifiers")
                        .WithOne("ParentType")
                        .HasForeignKey("ObjectBrowser.Models.Entities.TypeMetadata", "ModifiersId");

                    b.HasOne("ObjectBrowser.Models.Entities.NamespaceMetadata", "Namespace")
                        .WithMany("Types")
                        .HasForeignKey("NamespaceId");

                    b.HasOne("ObjectBrowser.Models.Entities.MethodMetadata", "ParentMethod")
                        .WithMany("GenericArguments")
                        .HasForeignKey("ParentMethodId");

                    b.HasOne("ObjectBrowser.Models.Entities.TypeMetadata", "ParentTypeA")
                        .WithMany("Attributes")
                        .HasForeignKey("ParentTypeAId");

                    b.HasOne("ObjectBrowser.Models.Entities.TypeMetadata", "ParentTypeB")
                        .WithMany("ImplementedInterfaces")
                        .HasForeignKey("ParentTypeBId");

                    b.HasOne("ObjectBrowser.Models.Entities.TypeMetadata", "ParentTypeC")
                        .WithMany("NestedTypes")
                        .HasForeignKey("ParentTypeCId");

                    b.HasOne("ObjectBrowser.Models.Entities.TypeMetadata", "ParentTypeE")
                        .WithMany("GenericArguments")
                        .HasForeignKey("ParentTypeEId");

                    b.HasOne("ObjectBrowser.Models.Entities.AssemblyMetadata", "RootAssembly")
                        .WithMany("RegisteredTypes")
                        .HasForeignKey("RootAssemblyId");
                });
#pragma warning restore 612, 618
        }
    }
}
